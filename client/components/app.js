import React, { Component } from 'react';
import ReduxModal from 'react-redux-modal';

import { connect } from 'react-redux';
import { meFromToken, meFromTokenSuccess, meFromTokenFailure, resetToken } from '../actions/auth.js';

class App extends Component {

  componentWillMount() {
   // console.log("this.props in app component: ", this.props);
    this.props.loadUserFromToken();
  }

  render() {
    return (
      <div>
        { this.props.children }
        <ReduxModal />
      </div>
    );
  }
}


function mapDispatchToProps(dispatch) {
  return {
    loadUserFromToken: () => {
      // console.log("loadUserFromToken is called");
      let token = sessionStorage.getItem('jwtToken');
      // console.log("token: ", token);
      if (!token || token === '') {
        return;  //if there is no token, dont bother
      }

      //fetch user from token (if server deems it's valid token)
      dispatch(meFromToken(token))
      .then((response) => {
        if (!response.error) {
          //reset token (possibly new token that was regenerated by the server)
          sessionStorage.setItem('jwtToken', response.payload.data.token);
          dispatch(meFromTokenSuccess(response.payload));
        } else {
          sessionStorage.removeItem('jwtToken'); //remove token from storage
          dispatch(meFromTokenFailure(response.payload));
        }
      });
    },
    resetMe: () => {
      console.log("resetMe in app component");
      sessionStorage.removeItem('jwtToken'); //remove token from storage
      dispatch(resetToken());
    }
  };
}


export default connect(null, mapDispatchToProps)(App);


// import React, { Component } from 'react';
// import ReduxModal from 'react-redux-modal';

// export default class App extends Component {

//   componentWillMount() {
//    console.log("this.props in app component: ", this.props);
//     this.props.loadUserFromToken();
//   }

//   render() {
//     return (
//       <div>
//         { this.props.children }
//         <ReduxModal />
//       </div>
//     );
//   }
// }